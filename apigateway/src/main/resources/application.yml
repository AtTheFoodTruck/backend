server:
  port: 8000

eureka:
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

# @author:jaemin - route, filter 설정
spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      default-filters:
        filters:
          - name: LoggingFilter
            args:
              baseMessage: Start Logging Filter.
              preLogger: true
              postLogger: true
      routes:
        # 로그인 요청 route config
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # 회원가입 요청 route config
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/join
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # user-service의 모든 요청 filter처리
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - JwtAuthenticationGatewayFilterFactory
#            - name: JwtAuthenticationGatewayFilterFactory
#              args:
#                role: USER_ROLE

  # redis 설정
#  redis:
#    lettuce:
#      pool:
#        max-active: 10
#        max-idle: 10
#        min-idle: 2
#    port: 6379  # default: 6379
#    host: localhost  # default: localhost

# gw process 추적
logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    reactor.netty.http.client: DEBUG
